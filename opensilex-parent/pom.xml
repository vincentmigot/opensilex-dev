<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.opensilex</groupId>
    <artifactId>opensilex-parent</artifactId>
    <packaging>pom</packaging>
    <version>${revision}</version>

    <name>opensilex-parent</name>

    <url>https://www.opensilex.org/</url>

    <properties>
        <!-- common projects version -->
        <revision>4.0.0-SNAPSHOT</revision>
        <!-- global encoding -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- generated doc site output directory -->
        <generated.doc.site.directory>${maven.multiModuleProjectDirectory}/../opensilex-site-doc</generated.doc.site.directory>
        <!-- flag to disable Front build -->
        <skipFrontBuild>false</skipFrontBuild>
        
        <node.version>v12.13.1</node.version>
        <yarn.version>v1.19.2</yarn.version>
        <!-- Java supported version -->
        <java.compiler.version>1.8</java.compiler.version>
        <!-- Minimal maven version -->
        <maven.minimal.version>3.5</maven.minimal.version>
        <!-- dependencies version -->
        <jersey.version>2.29.1</jersey.version>
        <tomcat.version>10.0.4</tomcat.version>
        <hibernate.validator.version>6.1.0.Final</hibernate.validator.version>
        <jackson.version>2.10.1</jackson.version>
        <javax.servlet.api.version>4.0.1</javax.servlet.api.version>
        <swagger.jersey2.jaxrs.version>1.6.0</swagger.jersey2.jaxrs.version>
        <maven.resolver.version>1.4.1</maven.resolver.version>
        <maven.resolver.provider.version>3.6.3</maven.resolver.provider.version>
        <rdf4j.version>3.0.3</rdf4j.version>
        <jena.query.builder.version>3.13.1</jena.query.builder.version>
        <data.nucleus.version>5.2.2</data.nucleus.version>
        <data.nucleus.jdo.version>3.2.0-m12</data.nucleus.jdo.version>
        <data.nucleus.jta.version>5.10.0.Final</data.nucleus.jta.version>
        <data.nucleus.mongodb.version>5.2.0-release</data.nucleus.mongodb.version>
        <bytebuddy.version>1.10.4</bytebuddy.version>
        <java.jwt.version>3.8.3</java.jwt.version>
        <picocli.version>4.1.1</picocli.version>
        <bcript.version>0.9.0</bcript.version>
        <commons.io.version>2.6</commons.io.version>
        <logback.version>1.2.3</logback.version>
        <janino.version>3.1.0</janino.version>
        <slf4j.api.version>1.7.29</slf4j.api.version>
        <javax.xml.bind.version>2.3.1</javax.xml.bind.version>
        <javax.mail.api.version>1.6.2</javax.mail.api.version>
        <javax.mail.version>1.6.2</javax.mail.version>
        <jaxb.version>2.3.0.1</jaxb.version>
        <jaxb.impl.version>2.3.2</jaxb.impl.version>
        <javax.activation.api.version>1.2.0</javax.activation.api.version>
        <reflections.version>0.9.11</reflections.version>
        <httpclient.version>4.5.10</httpclient.version>
        <httpcore.version>4.4.12</httpcore.version>
        <javaee.web.api.version>8.0.1</javaee.web.api.version>
        <!-- test only dependencies version -->
        <junit.version>4.12</junit.version>
        <mockito.version>3.2.0</mockito.version>
        <!-- maven plugins versions -->
        <maven.clean.plugin.version>3.1.0</maven.clean.plugin.version>
        <maven.deploy.plugin.version>3.0.0-M1</maven.deploy.plugin.version>
        <maven.install.plugin.version>3.0.0-M1</maven.install.plugin.version>
        <maven.compiler.plugin.version>3.8.1</maven.compiler.plugin.version>
        <maven.enforcer.plugin.version>3.0.0-M2</maven.enforcer.plugin.version>
        <maven.jar.plugin.version>3.1.2</maven.jar.plugin.version>
        <maven.surefire.plugin.version>3.0.0-M3</maven.surefire.plugin.version>
        <maven.resources.plugin.version>3.1.0</maven.resources.plugin.version>
        <maven.site.plugin.version>3.8.2</maven.site.plugin.version>
        <maven.assembly.plugin.version>3.1.1</maven.assembly.plugin.version>
        <maven.archetype.plugin.version>3.1.2</maven.archetype.plugin.version>
        <maven.dependency.plugin.version>3.1.1</maven.dependency.plugin.version>
        <versions.maven.plugin.version>2.7</versions.maven.plugin.version>
        <flatten.maven.plugin.version>1.1.0</flatten.maven.plugin.version>
        <properties.maven.plugin.version>1.0.0</properties.maven.plugin.version>
        <serviceloader.maven.plugin.version>1.1.0</serviceloader.maven.plugin.version>
        <jacoco.maven.plugin.version>0.8.4</jacoco.maven.plugin.version>
        <owasp.dependency.check.maven.plugin.version>5.2.1</owasp.dependency.check.maven.plugin.version>
        <frontend.maven.plugin.version>1.8.0</frontend.maven.plugin.version>
        <maven.project.info.reports.plugin.version>3.0.0</maven.project.info.reports.plugin.version>
        <maven.javadoc.plugin.version>3.1.1</maven.javadoc.plugin.version>
        <maven.exec.plugin.version>1.6.0</maven.exec.plugin.version>
    </properties>

    <dependencyManagement>
        <!--Jersey dependency management--> 
        <dependencies>
            <dependency>
                <groupId>org.glassfish.jersey</groupId>
                <artifactId>jersey-bom</artifactId>
                <version>${jersey.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!--CLI--> 
        <dependency>
            <groupId>info.picocli</groupId>
            <artifactId>picocli</artifactId>
            <version>${picocli.version}</version>
        </dependency>
        <!--Embedded Tomcat Server--> 
        <dependency>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-core</artifactId>
            <version>${tomcat.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-jasper</artifactId>
            <version>${tomcat.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-websocket</artifactId>
            <version>${tomcat.version}</version>
        </dependency>
        <!--Maven Dependency resolver--> 
        <dependency>
            <groupId>org.apache.maven.resolver</groupId>
            <artifactId>maven-resolver-api</artifactId>
            <version>${maven.resolver.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.maven.resolver</groupId>
            <artifactId>maven-resolver-impl</artifactId>
            <version>${maven.resolver.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.maven.resolver</groupId>
            <artifactId>maven-resolver-connector-basic</artifactId>
            <version>${maven.resolver.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.maven.resolver</groupId>
            <artifactId>maven-resolver-transport-file</artifactId>
            <version>${maven.resolver.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.maven.resolver</groupId>
            <artifactId>maven-resolver-transport-http</artifactId>
            <version>${maven.resolver.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.maven</groupId>
            <artifactId>maven-resolver-provider</artifactId>
            <version>${maven.resolver.provider.version}</version>
        </dependency>
        <!--BCrypt--> 
        <dependency>
            <groupId>at.favre.lib</groupId>
            <artifactId>bcrypt</artifactId>
            <version>${bcript.version}</version>
        </dependency>
        <!-- Reflection utils -->
        <dependency>
            <groupId>org.reflections</groupId>
            <artifactId>reflections</artifactId>
            <version>${reflections.version}</version>
        </dependency>
        <!--Proxy class library--> 
        <dependency>
            <groupId>net.bytebuddy</groupId>
            <artifactId>byte-buddy</artifactId>
            <version>${bytebuddy.version}</version>
        </dependency>
        <!--RDF4J--> 
        <dependency>
            <groupId>org.eclipse.rdf4j</groupId>
            <artifactId>rdf4j-client</artifactId>
            <version>${rdf4j.version}</version>
            <type>pom</type>
        </dependency>  
        <dependency>
            <groupId>org.eclipse.rdf4j</groupId>
            <artifactId>rdf4j-repository-http</artifactId>
            <version>${rdf4j.version}</version>
        </dependency>  
        <!--RDF4J Testing--> 
        <dependency>
            <groupId>org.eclipse.rdf4j</groupId>
            <artifactId>rdf4j-repository-sail</artifactId>
            <version>${rdf4j.version}</version>
            <scope>test</scope>
        </dependency>  
        <dependency>
            <groupId>org.eclipse.rdf4j</groupId>
            <artifactId>rdf4j-sail-nativerdf</artifactId>
            <version>${rdf4j.version}</version>
            <scope>test</scope>
        </dependency>  
        <dependency>
            <groupId>org.eclipse.rdf4j</groupId>
            <artifactId>rdf4j-sail-memory</artifactId>
            <version>${rdf4j.version}</version>
            <scope>test</scope>
        </dependency>  
        <dependency>
            <groupId>org.eclipse.rdf4j</groupId>
            <artifactId>rdf4j-sail-inferencer</artifactId>
            <version>${rdf4j.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.rdf4j</groupId>
            <artifactId>rdf4j-shacl</artifactId>
            <version>${rdf4j.version}</version>
            <scope>test</scope>
        </dependency>          
        <!--DataNucleus - Big data object mapping--> 
        <dependency>
            <groupId>org.datanucleus</groupId>
            <artifactId>datanucleus-core</artifactId>
            <version>${data.nucleus.version}</version>
        </dependency>
        <dependency>
            <groupId>org.datanucleus</groupId>
            <artifactId>javax.jdo</artifactId>
            <version>${data.nucleus.jdo.version}</version>
        </dependency>
        <dependency>
            <groupId>org.datanucleus</groupId>
            <artifactId>datanucleus-api-jdo</artifactId>
            <version>${data.nucleus.version}</version>
        </dependency>
        <!--DataNucleus - MongoDB--> 
        <dependency>
            <groupId>org.datanucleus</groupId>
            <artifactId>datanucleus-mongodb</artifactId>
            <version>${data.nucleus.mongodb.version}</version>
        </dependency>
        <!--DataNucleus - JTA Transaction--> 
        <dependency>
            <groupId>org.jboss.narayana.jta</groupId>
            <artifactId>narayana-jta</artifactId>
            <version>${data.nucleus.jta.version}</version>
        </dependency>
        <!--JWT--> 
        <dependency>
            <groupId>com.auth0</groupId>
            <artifactId>java-jwt</artifactId>
            <version>${java.jwt.version}</version>
        </dependency>
        <!--Logger--> 
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>${logback.version}</version>
        </dependency>
        <!--allow condition evaluation in logback configuration file--> 
        <dependency>
            <groupId>org.codehaus.janino</groupId>
            <artifactId>janino</artifactId>
            <version>${janino.version}</version>
        </dependency>
        <!--Jersey--> 
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-servlet</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.inject</groupId>
            <artifactId>jersey-hk2</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-multipart</artifactId>
        </dependency>
        <!--Jersey Validation extension --> 
        <dependency>
            <groupId>org.glassfish.jersey.ext</groupId>
            <artifactId>jersey-bean-validation</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>${hibernate.validator.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>${httpclient.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpcore</artifactId>
            <version>${httpcore.version}</version>
        </dependency>
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-web-api</artifactId>
            <version>${javaee.web.api.version}</version>
            <scope>provided</scope>
        </dependency>
        <!--Jackson JSON & YAML--> 
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.jaxrs</groupId>
            <artifactId>jackson-jaxrs-json-provider</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-yaml</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <!--Servlet API v4 provided by Tomcat--> 
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>${javax.servlet.api.version}</version>
            <scope>provided</scope>
        </dependency>
        <!--Swagger--> 
        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-jersey2-jaxrs</artifactId>
            <version>${swagger.jersey2.jaxrs.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>javax.validation</groupId>
                    <artifactId>validation-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!--Java extension compatibility for JDK 9+--> 
        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>${javax.xml.bind.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.mail</groupId>
            <artifactId>javax.mail-api</artifactId>
            <version>${javax.mail.api.version}</version>
        </dependency>
        <dependency>
            <groupId>com.sun.mail</groupId>
            <artifactId>javax.mail</artifactId>
            <version>${javax.mail.version}</version>
        </dependency>
        <!--Logger--> 
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.api.version}</version>
        </dependency>
        <!--SPARQL Jena--> 
        <dependency>
            <groupId>org.apache.jena</groupId>
            <artifactId>jena-querybuilder</artifactId>
            <version>${jena.query.builder.version}</version>
        </dependency>
        <!--File IO management--> 
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons.io.version}</version>
        </dependency>
        <!--Unit tests--> 
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.test-framework</groupId>
            <artifactId>jersey-test-framework-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.test-framework.providers</groupId>
            <artifactId>jersey-test-framework-provider-grizzly2</artifactId>
            <scope>test</scope>
        </dependency>
        <!--Unit tests mocking framework--> 
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <!-- define front resources folder -->
        <resources>
            <resource>
                <directory>front</directory>
                <excludes>
                    <exclude>**</exclude>
                </excludes>
            </resource>
        </resources>
        <!-- Used maven plugins definitions -->
        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>${maven.clean.plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${maven.deploy.plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>${maven.install.plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven.compiler.plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${maven.enforcer.plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven.jar.plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven.surefire.plugin.version}</version>
                    <configuration>
                        <argLine>-Dfile.encoding=${project.build.sourceEncoding}</argLine>
                        <trimStackTrace>false</trimStackTrace>
                        <useFile>false</useFile>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${maven.assembly.plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-archetype-plugin</artifactId>
                    <version>${maven.archetype.plugin.version}</version>
                    <executions>
                        <execution>
                            <phase>integration-test</phase>
                            <configuration>
                                <skip>true</skip>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${maven.dependency.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>${versions.maven.plugin.version}</version>
              
                    <executions>
                        <execution>
                            <phase>generate-resources</phase>
                            <goals>
                                <goal>display-dependency-updates</goal>
                                <goal>display-plugin-updates</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>flatten-maven-plugin</artifactId>
                    <version>${flatten.maven.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>properties-maven-plugin</artifactId>
                    <version>${properties.maven.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>eu.somatik.serviceloader-maven-plugin</groupId>
                    <artifactId>serviceloader-maven-plugin</artifactId>
                    <version>${serviceloader.maven.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.owasp</groupId>
                    <artifactId>dependency-check-maven</artifactId>
                    <version>${owasp.dependency.check.maven.plugin.version}</version>
                </plugin>
                <!-- Generate swagger.json file -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>${maven.exec.plugin.version}</version>
                    <executions>
                        <execution>
                            <phase>process-classes</phase>
                            <goals>
                                <goal>java</goal>
                            </goals>
                            <configuration>
                                <skip>${skipFrontBuild}</skip>
                                <mainClass>org.opensilex.utils.SwaggerAPIGenerator</mainClass>
                                <arguments>
                                    <argument>${project.basedir}/src/main/java/</argument>
                                    <argument>${project.basedir}/front/src/lib/swagger.json</argument>
                                </arguments>
                            </configuration>
                        </execution>
                    </executions>
                  
                </plugin>
                <!-- Generate TypeScript library from swagger.json file -->
                <plugin>
                    <groupId>org.opensilex</groupId>
                    <artifactId>opensilex-swagger-codegen-maven-plugin</artifactId>
                    <version>${revision}</version>
                    
                    <configuration>
                        <skip>${skipFrontBuild}</skip>
                    </configuration>
                    
                    <executions>
                        <execution>
                            <phase>process-classes</phase>
                            <goals>
                                <goal>generate</goal>
                            </goals>
                            <configuration>
                                <inputSpec>${project.basedir}/front/src/lib/swagger.json</inputSpec>
                                <templateDirectory>${project.basedir}/../opensilex/src/main/resources/swagger/templates/typescript-inversify</templateDirectory>
                                <language>typescript-inversify</language>
                                <output>${project.basedir}/front/src/lib/</output>
                                <configOptions>
                                    <packageName>${project.name}</packageName>
                                    <packageVersion>${revision}</packageVersion>
                                    <npmName>${project.name}</npmName>
                                    <usePromise>true</usePromise>
                                    <modelPropertyNaming>original</modelPropertyNaming>
                                </configOptions>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <!-- Front Node & Yarn management -->
                <plugin>
                    <groupId>com.github.eirslett</groupId>
                    <artifactId>frontend-maven-plugin</artifactId>
                    <version>${frontend.maven.plugin.version}</version>
                        
                    <configuration>
                        <skip>${skipFrontBuild}</skip>
                        <nodeVersion>${node.version}</nodeVersion>
                        <yarnVersion>${yarn.version}</yarnVersion>
                        <installDirectory>../.node</installDirectory>
                        <workingDirectory>front</workingDirectory>
                    </configuration>
                </plugin>
                
            </plugins>
        </pluginManagement>
        
        <plugins>
            <!--Default maven plugin for java compatibility version --> 
            <!-- Clear java cache when annotations change -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.compiler.version}</source>
                    <target>${java.compiler.version}</target>
                    <compilerArgument>-proc:none</compilerArgument>
                    <!-- Add hibernate validation -->
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.hibernate.validator</groupId>
                            <artifactId>hibernate-validator-annotation-processor</artifactId>
                            <version>6.1.0.Final</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
            
            <!--check minimal maven version--> 
            <plugin>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce-maven</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>${maven.minimal.version}</version>
                                </requireMavenVersion>
                            </rules>    
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
            <!--Flatten pom (ie: merge with opensilex-parent) to allow single module build--> 
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <configuration>
                    <updatePomFile>true</updatePomFile>
                    <outputDirectory>${basedir}/target/classes</outputDirectory>
                    <flattenedPomFilename>opensilex-pom.xml</flattenedPomFilename>
                </configuration>
                <executions>
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            
            <!--Generate OpenSilex service loader references--> 
            <plugin>
                <groupId>eu.somatik.serviceloader-maven-plugin</groupId>
                <artifactId>serviceloader-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>opensilex-standard-services</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <services>
                                <param>org.opensilex.module.OpenSilexModule</param>
                                <param>org.opensilex.module.ModuleUpdate</param>
                                <param>org.opensilex.server.rest.RestApplicationAPI</param>
                                <param>org.opensilex.cli.OpenSilexCommand</param>
                                <param>org.opensilex.sparql.deserializer.SPARQLDeserializer</param>
                            </services>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
       
            <!--Generate tests artifact--> 
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <forceCreation>true</forceCreation>
                    <archive>
                        <index>true</index>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                        </manifest>
                    </archive>
                    <skipIfEmpty>true</skipIfEmpty>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            
            <!--inject pom properties into app.properties files--> 
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>properties-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>write-project-properties</goal>
                        </goals>
                        <configuration>
                            <outputFile>
                                ${project.build.outputDirectory}/app.properties
                            </outputFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
            <!-- site plugin -->
            <plugin>
                <artifactId>maven-site-plugin</artifactId>
                <version>${maven.site.plugin.version}</version>
                <configuration>
                    <source>8</source>
                    <locales>en</locales>
                    <!-- see below to enable multilang doc -->
                    <!--<locales>en,fr</locales>-->
                    <generateReports>true</generateReports>
                    <outputDirectory>${generated.doc.site.directory}/${project.name}/</outputDirectory>
                </configuration>
            </plugin>
            
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>${maven.clean.plugin.version}</version>
                <executions>
                    <execution>
                        <id>clean Vue front lib</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                        <configuration>
                            <skip>${skipFrontBuild}</skip>
                            <filesets>
                                <fileset>
                                    <directory>front/src/lib</directory>
                                    <includes>
                                        <include>**/*</include>
                                    </includes>
                                    <excludes>
                                        <exclude>.gitkeep</exclude>
                                    </excludes>
                                </fileset>
                                <fileset>
                                    <directory>front/types</directory>
                                    <includes>
                                        <include>**/*</include>
                                    </includes>
                                </fileset>
                            </filesets>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <!-- Standart maven site reports -->
    <reporting>
        <plugins>
            <plugin>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>${maven.project.info.reports.plugin.version}</version>
            </plugin>
            <plugin> 
                <groupId>org.apache.maven.plugins</groupId> 
                <artifactId>maven-javadoc-plugin</artifactId> 
                <version>${maven.javadoc.plugin.version}</version> 
                <configuration>
                    <source>8</source>
                    <quiet>true</quiet>
                    <javadocExecutable>${java.home}/bin/javadoc</javadocExecutable>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>   
                <version>3.0.0-M3</version>   
            </plugin>  
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>3.0.0</version>
            </plugin>
        </plugins>
    </reporting>
    
    <!--  Configuration profiles  -->
    <profiles>
        <!-- Build Vue app if present -->
        <profile>
            <id>with-vue-app</id>
            <activation>
                <file>
                    <exists>front/package.json</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.github.eirslett</groupId>
                        <artifactId>frontend-maven-plugin</artifactId>
                        <version>${frontend.maven.plugin.version}</version>
                        <executions>
                            <execution>
                                <id>install Vue application dependencies</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>yarn</goal>
                                </goals>

                                <configuration>
                                    <arguments>--network-timeout 1000000 install</arguments>
                                </configuration>
                            </execution>
                            
                            <execution>
                                <id>build typescript defintion</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>yarn</goal>
                                </goals>

                                <configuration>
                                    <arguments>run build:types</arguments>
                                    <workingDirectory>front/src/lib</workingDirectory>
                                </configuration>
                            </execution>
                            
                            <execution>
                                <id>build Vue application</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>yarn</goal>
                                </goals>

                                <configuration>
                                    <arguments>run build</arguments>
                                </configuration>
                            </execution>
                            
                            <execution>
                                <id>check Vue application outdated dependencies</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>yarn</goal>
                                </goals>

                                <configuration>
                                    <arguments>run check:outdated</arguments>
                                </configuration>
                            </execution>
                            
                            <execution>
                                <id>check Vue application security issues</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>yarn</goal>
                                </goals>

                                <configuration>
                                    <arguments>audit</arguments>
                                </configuration>
                            </execution>
                            
                        </executions>
                    </plugin>
                    
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>${maven.resources.plugin.version}</version>
                        <executions>
                            <execution>
                                <id>Copy Vue application dist files</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${basedir}/target/classes/front</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>front/dist</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Profile which enable OWASP security check for libraries, could be VERY slow -->
        <profile>
            <id>with-security-check</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.owasp</groupId>
                        <artifactId>dependency-check-maven</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <!-- Profile which enable Jacoco Code coverage -->
        <profile>
            <id>with-test-report</id>
            <build>
                <plugins>
                    <!--Code coverage @see https://www.eclemma.org/jacoco/trunk/index.html --> 
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>${jacoco.maven.plugin.version}</version>
                        <configuration>
                            <outputDirectory>${generated.doc.site.directory}/${project.name}/jacoco/</outputDirectory>
                            <excludes>
                                <exclude>**/*.war</exclude>
                            </excludes>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>report</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>merge</id>
                                <goals>
                                    <goal>merge</goal>
                                </goals>
                                <configuration>
                                    <fileSets>
                                        <fileSet implementation="org.apache.maven.shared.model.fileset.FileSet">
                                            <directory>${project.basedir}</directory>
                                            <includes>
                                                <include>**/*.exec</include>
                                            </includes>
                                        </fileSet>
                                    </fileSets>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <reporting>
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <reportSets>
                            <reportSet>
                                <reports>
                                    <report>report</report>
                                </reports>
                            </reportSet>
                        </reportSets>
                    </plugin>
                </plugins>  
            </reporting>
        </profile>
        
        <!-- Profile to enable in eclipse to avoid build errors -->
        <profile>
            <id>for-eclipse</id>
            <activation>
                <property>
                    <name>m2e.version</name>
                </property>
            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.eclipse.m2e</groupId>
                            <artifactId>lifecycle-mapping</artifactId>
                            <version>1.0.0</version>
                            <configuration>
                                <lifecycleMappingMetadata>
                                    <pluginExecutions>
                                        <pluginExecution>
                                            <pluginExecutionFilter>
                                                <groupId>org.codehaus.mojo</groupId>
                                                <artifactId>flatten-maven-plugin</artifactId>
                                                <goals>
                                                    <goal>flatten</goal>
                                                    <goal>clean</goal>
                                                </goals>
                                            </pluginExecutionFilter>
                                            <action>
                                                <execute />
                                            </action>
                                        </pluginExecution>
                                    </pluginExecutions>
                                </lifecycleMappingMetadata>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
    </profiles>
</project>
